//
//  ProductListModels.swift
//  eCommerceVIP
//
//  Created by enes.sakut on 17.04.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ProductList
{
    struct ProductModel: Identifiable, Codable {

//        init(id: Int? = nil, title: String? = nil, description: String? = nil, imageUrl: [String]? = nil, price: Double? = nil, count: Int? = nil, productInfo: ProductInfo? = nil) {
//           self.id = id
//           self.title = title
//           self.description = description
//           self.imageUrl = imageUrl
//           self.price = price
//           self.productInfo = productInfo
//       }

       var id: Int?
       var title: String?
       var description: String?
       var imageUrl: [String]?
       var price: Double?
       var count: Int?
       var productInfo: ProductInfo?


   }
   struct ProductInfo: Codable {
//       init(size: String? = nil, type: String? = nil, color: String? = nil, productBrand: String? = nil) {
//           self.size = size
//           self.type = type
//           self.color = color
//           self.productBrand = productBrand
//       }

       var size: String?
       var type: String?
       var color: String?
       var productBrand: String?
   }
}

extension ProductList.ProductModel {
    init(from dict: [String: Any]) {
        id = dict["id"] as? Int
        title = dict["title"] as? String
        price = dict["price"] as? Double
        description = dict["description"] as? String
        imageUrl = dict["imageUrl"] as? [String]
        count = dict["count"] as? Int
        productInfo = dict["productInfo"] as? ProductList.ProductInfo
        
    }
}

extension ProductList.ProductInfo {
    init(from dict: AnyObject) {
        color = dict["color"] as? String
        size = dict["size"] as? String
        type = dict["type"] as? String
        productBrand = dict["productBrand"] as? String
    }
}
